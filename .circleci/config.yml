version: 2.1

orbs:
  node: circleci/node@5
  macos: circleci/macos@2.0.0

jobs:
  test-node:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit --ignore-workspace-root-check
      - store_test_results:
          path: ./test-results/

  build-ios:
    macos:
      xcode: "15.4.0"
    steps:
      - checkout
      - run:
          name: Check Node Version
          command: node --version
      - node/install:
          node-version: '22.15.0'
      - run:
          name: Install node modules
          command: npm i
      - macos/switch-ruby:
          version: "3.1.3"
      - run:
          name: Install Bundler
          command: gem install bundler
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle install
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Run tests and upload to TestFlight
          command: bundle exec fastlane ios uploadtestflight
          working_directory: ios

  build-ruby:
    docker:
      - image: cimg/ruby:3.1.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Bundler
          command: gem install bundler
      - run:
          name: Bundle install
          command: bundle install
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  build-android:
    docker:
      - image: cimg/android:2024.01
        environment:
          BUNDLE_PATH: vendor/bundle
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup Android Keystore
          command: |
            # Create directory for keystore
            mkdir -p android/app
            
            # Create keystore file from environment variable
            echo $ANDROID_KEYSTORE_BASE64 | base64 -d > android/app/release.keystore
            
            # Verify keystore file was created
            if [ -f "android/app/release.keystore" ]; then
              echo "Keystore file created successfully"
            else
              echo "Failed to create keystore file"
              exit 1
            fi
      - run:
          name: Install Java 11
          command: sudo apt-get update && sudo apt-get install -y openjdk-11-jdk
      - run:
          name: Set JAVA_HOME
          command: echo 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64' >> $BASH_ENV
      - node/install:
          node-version: '22.15.0'
      - run:
          name: Install node modules
          command: npm i
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Bundler
          command: gem install bundler
      - run:
          name: Bundle install
          command: bundle install
      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Chmod permissions
          command: sudo chmod +x ./gradlew
          working_directory: android
      - run:
          name: Run tests and upload to Play Store
          command: bundle exec fastlane android deploy_to_production
          working_directory: android
          environment:
            ANDROID_KEYSTORE_PATH: ~/repo/android/app/release.keystore
            ANDROID_KEYSTORE_PASSWORD: ${ANDROID_KEYSTORE_PASSWORD}
            ANDROID_KEY_ALIAS: ${ANDROID_KEY_ALIAS}
            ANDROID_KEY_PASSWORD: ${ANDROID_KEY_PASSWORD}

workflows:
  build-and-test:
    jobs:
      - build-ios
      - build-ruby
      - build-android