version: 2.1

orbs:
  node: circleci/node@5.1.0
  ruby: circleci/ruby@2.1.1

jobs:
  react-native-test:
    docker:
      - image: cimg/node:18.8

    steps:
      - checkout

      - restore_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: npm install
      - run: npm test
      - run: npm run tsc

      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}-{{ arch }}
          paths:
            - ~/.npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

  macos-build-and-deploy:
    macos:
      xcode: 13.4.1
    environment:
      FL_OUTPUT_DIR: output
      FASTLANE_LANE: beta
      # These environment variables should be set in CircleCI project settings:
      # ASC_KEY_ID: App Store Connect API Key ID
      # ASC_ISSUER_ID: App Store Connect API Issuer ID
      # ASC_KEY_CONTENT: App Store Connect API Key Content (base64 encoded)
      # APPLE_TEAM_ID: Your Apple Developer Team ID
      # For Android builds:
      # ANDROID_KEYSTORE_FILE: Path to your keystore file
      # ANDROID_KEYSTORE_PASSWORD: Your keystore password
      # ANDROID_KEY_ALIAS: Your key alias
      # ANDROID_KEY_PASSWORD: Your key password
      # GOOGLE_PLAY_JSON_KEY: Path to your Google Play JSON key file
      # Required Ruby/OpenSSL environment variables
 
    steps:
      - checkout
      - restore_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}-{{ arch }}
          paths:
            - ~/.npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: .

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: Generate Native Code from Expo
          command: npx expo prebuild --clean

      - restore_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}

      - run:
          command: pod install
          working_directory: ios

      - save_cache:
          key: pods-v1-{{ checksum "ios/Podfile.lock" }}-{{ arch }}
          paths:
            - ios/Pods

      - run:
          name: Fastlane deploy to TestFlight
          command: bundle exec fastlane ios beta
          working_directory: .

  android-build-and-deploy:
    working_directory: ~/expo-react-native-paper
    docker:
      - image: cimg/android:2022.08-node
    steps:
      - checkout:
          path: ~/expo-react-native-paper

      - attach_workspace:
          at: ~/expo-react-native-paper

      - restore_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package-lock.json" }}-{{ arch }}
          paths:
            - ~/.npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: .

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: Generate Native Code from Expo
          command: npx expo prebuild --clean

      - run:
          name: Fastlane deploy to Google Play
          working_directory: .
          command: bundle exec fastlane android beta

workflows:
  react-native-android-ios:
    jobs:
      - react-native-test
      - approve_deploy_to_apple_app_store:
          type: approval
          requires:
            - react-native-test
      - approve_deploy_to_google_play_store:
          type: approval
          requires:
            - react-native-test
      - android-build-and-deploy:
          requires:
            - approve_deploy_to_google_play_store
      - macos-build-and-deploy:
          requires:
            - approve_deploy_to_apple_app_store