name: Build, Screenshot and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ios:
    runs-on: macos-latest
    env:
      # These environment variables should be set in GitHub Secrets:
      # ASC_KEY_ID: App Store Connect API Key ID
      # ASC_ISSUER_ID: App Store Connect API Issuer ID
      # ASC_KEY_CONTENT: App Store Connect API Key Content (base64 encoded)
      # APPLE_TEAM_ID: Your Apple Developer Team ID
    steps:
      - uses: actions/checkout@v3
      
      # Set up Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'pnpm'
      
      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.2
          run_install: false
      
      # Install Node.js dependencies
      - name: Install JS dependencies
        run: pnpm install
        
      # Setup Ruby
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          
      - name: Install Ruby dependencies
        run: bundle install
        
      - name: Generate Native Code from Expo
        run: npx expo prebuild --clean
        
      - name: Setup CI
        run: bundle exec fastlane setup_ci
        
      - name: Build iOS
        run: bundle exec fastlane ios build
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: build/*.ipa

  android:
    runs-on: ubuntu-latest
    env:
      # These environment variables should be set in GitHub Secrets:
      # ANDROID_KEYSTORE_PASSWORD: Your keystore password
      # ANDROID_KEY_ALIAS: Your key alias
      # ANDROID_KEY_PASSWORD: Your key password
      # ANDROID_KEYSTORE_BASE64: Your base64-encoded keystore file
    steps:
      - uses: actions/checkout@v3
      
      # Set up Node.js
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'pnpm'
      
      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.12.2
          run_install: false
      
      # Install Node.js dependencies
      - name: Install JS dependencies
        run: pnpm install
        
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          
      - name: Install Ruby dependencies
        run: bundle install
        
      # Decode and save the Android keystore file
      - name: Decode Android keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p android/app
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore
          echo "ANDROID_KEYSTORE_FILE=android/app/my-release-key.keystore" >> $GITHUB_ENV
        
      - name: Generate Native Code from Expo
        run: npx expo prebuild --clean
        
      - name: Build Android
        run: bundle exec fastlane android build
        env:
          ANDROID_KEYSTORE_FILE: ${{ env.ANDROID_KEYSTORE_FILE || 'android/app/debug.keystore' }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: android/app/build/outputs