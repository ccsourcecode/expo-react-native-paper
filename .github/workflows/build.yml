name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  react-native-test:
    runs-on: ubuntu-latest
    env:
      CI: true
      # Performance optimizations for Jest
      JEST_WORKER_ID: 1
      NODE_OPTIONS: "--max-old-space-size=4096"
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '20.10'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run Tests
        run: npm test -- --maxWorkers=2
      
      - name: TypeScript Check
        run: npm run tsc
  
  ios-build:
    needs: react-native-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: macos-latest
    env:
      # These environment variables should be set in GitHub Secrets:
      # ASC_KEY_ID: App Store Connect API Key ID
      # ASC_ISSUER_ID: App Store Connect API Issuer ID
      # ASC_KEY_CONTENT: App Store Connect API Key Content (base64 encoded)
      # APPLE_TEAM_ID: Your Apple Developer Team ID
      FL_OUTPUT_DIR: output
      # Performance optimizations
      DISABLE_FLIPPER: 1
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '20.10'
          cache: 'npm'
      
      - name: Install JS Dependencies
        run: npm install
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.4'
          bundler-cache: true
      
      - name: Install Fastlane
        run: gem install fastlane cocoapods
        
      - name: Setup iOS Signing Configuration
        run: |
          chmod +x fastlane/setup-ios-signing.sh
          ./fastlane/setup-ios-signing.sh
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          FASTLANE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          
      - name: Generate Native Code from Expo
        run: npx expo prebuild --clean
        
      - name: Add Performance Optimizations to Podfile
        run: |
          echo "Adding performance optimizations to Podfile..."
          cat >> ios/Podfile << 'EOL'

          # Performance optimizations
          post_install do |installer|
            installer.pods_project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
                config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'FB_SONARKIT_ENABLED=0'
                config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
                
                # Speed up build time
                config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
                
                # Recommended flags for performance
                config.build_settings['COMPILER_INDEX_STORE_ENABLE'] = 'NO'
                config.build_settings['ENABLE_BITCODE'] = 'NO'
              end
            end
          end
          EOL
        
      - name: Install CocoaPods
        run: cd ios && pod install --verbose
        
      - name: Deploy to TestFlight
        run: cd fastlane && fastlane ios beta
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_CONTENT: ${{ secrets.ASC_KEY_CONTENT }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          FASTLANE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: output/*.ipa

  android-build:
    needs: react-native-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Dorg.gradle.jvmargs='-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8'"
      # Performance optimizations
      DISABLE_FLIPPER: 1
      
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '20.10'
          cache: 'npm'
      
      - name: Install JS Dependencies
        run: npm install
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Install Fastlane
        run: gem install fastlane
          
      - name: Generate Native Code from Expo
        run: npx expo prebuild --clean
        
      - name: Add Performance Optimizations to Gradle
        run: |
          echo "Adding performance optimizations to gradle.properties..."
          cat >> android/gradle.properties << 'EOL'
          
          # Performance optimizations
          org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.daemon=true
          org.gradle.configureondemand=true
          org.gradle.parallel=true
          org.gradle.caching=true
          android.enableR8.fullMode=true
          android.enableJetifier=true
          android.useAndroidX=true
          android.disableAutomaticComponentCreation=true
          
          # Disable unused ABIs to speed up build
          android.abi.filter=armeabi-v7a,arm64-v8a
          
          # Hermes optimizations
          hermesEnabled=true
          newArchEnabled=false
          EOL
        
      - name: Setup Android Signing Keys
        run: |
          chmod +x fastlane/setup-android-keys.sh
          ./fastlane/setup-android-keys.sh
        env:
          ANDROID_SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_PLAY_STORE_CREDENTIALS: ${{ secrets.ANDROID_PLAY_STORE_CREDENTIALS }}
        
      - name: Deploy to Play Store Beta
        run: cd fastlane && fastlane android beta
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          GOOGLE_PLAY_JSON_KEY: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: android/app/build/outputs