before_all do
  ensure_git_branch(branch: 'main')
  ensure_git_status_clean
  git_pull
end

platform :ios do
  # create the lane for certificates:
  lane :certs do
    match(app_identifier: "com.yourdomain.appname", type: 'appstore', readonly: true) # Replace with your app identifier
  end

  # Lane to upload or release to TestFlight:
  desc "Release a new Test Flight"
  lane :uploadtestflight do
    match(
      type: "appstore",
      app_identifier: "com.yourdomain.appname", # Replace with your app identifier
      readonly: true,
    )
    increment_build_number(xcodeproj: "YourApp.xcodeproj") # Replace with your xcodeproj name
    cocoapods(
      clean_install: true, 
      repo_update: true
    )
    # Get the version number from the project and check against
    # the latest build already available on TestFlight, then
    # increase the build number by 1. If no build is available
    # for that version, then start at 1
    build_app(
      workspace: "YourApp.xcworkspace", # Replace with your workspace name
      scheme: "YourApp", # Replace with your scheme name
      export_options: {
        compileBitcode: false, # Optional: Set to true if you need bitcode
        provisioningProfiles: {
          "com.yourdomain.appname" => "match AppStore com.yourdomain.appname" # Replace with your app identifier
        }
      }
    )
    
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      skip_submission: true
    )
  end

  desc "Push a new release build to the App Store"
  lane :release do
    increment_build_number(xcodeproj: "YourApp.xcodeproj") # Replace with your xcodeproj name
    build_app(
      workspace: "YourApp.xcworkspace", # Replace with your workspace name
      scheme: "YourApp" # Replace with your scheme name
    )
    upload_to_app_store
  end
end